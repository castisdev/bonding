!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
AD_ACTOR_CHURN_TIMER	bond_3ad.h	/^	AD_ACTOR_CHURN_TIMER,$/;"	e	enum:__anon8
AD_AGGREGATE_WAIT_TIME	bond_3ad.c	46;"	d	file:
AD_AGGREGATOR_SELECTION_TIMER	bond_3ad.c	1837;"	d	file:
AD_BANDWIDTH	bond_3ad.h	/^	AD_BANDWIDTH = 0,$/;"	e	enum:__anon1
AD_CHURN_DETECTION_TIME	bond_3ad.c	45;"	d	file:
AD_COLLECTOR_MAX_DELAY	bond_3ad.c	38;"	d	file:
AD_COUNT	bond_3ad.h	/^	AD_COUNT$/;"	e	enum:__anon1
AD_CURRENT_WHILE_TIMER	bond_3ad.h	/^	AD_CURRENT_WHILE_TIMER,$/;"	e	enum:__anon8
AD_DUPLEX_KEY_BITS	bond_3ad.c	77;"	d	file:
AD_FAST_PERIODIC	bond_3ad.h	/^	AD_FAST_PERIODIC,      \/\/ periodic machine$/;"	e	enum:__anon3
AD_FAST_PERIODIC_TIME	bond_3ad.c	41;"	d	file:
AD_LACP_FAST	bond_3ad.h	39;"	d
AD_LACP_SLOW	bond_3ad.h	38;"	d
AD_LINK_SPEED_BITMASK_10000MBPS	bond_3ad.c	86;"	d	file:
AD_LINK_SPEED_BITMASK_1000MBPS	bond_3ad.c	85;"	d	file:
AD_LINK_SPEED_BITMASK_100MBPS	bond_3ad.c	84;"	d	file:
AD_LINK_SPEED_BITMASK_10MBPS	bond_3ad.c	83;"	d	file:
AD_LINK_SPEED_BITMASK_1MBPS	bond_3ad.c	82;"	d	file:
AD_LONG_TIMEOUT	bond_3ad.c	35;"	d	file:
AD_LONG_TIMEOUT_TIME	bond_3ad.c	44;"	d	file:
AD_MARKER_INFORMATION_SUBTYPE	bond_3ad.h	/^	AD_MARKER_INFORMATION_SUBTYPE = 1, \/\/ marker imformation subtype$/;"	e	enum:__anon7
AD_MARKER_RESPONSE_SUBTYPE	bond_3ad.h	/^	AD_MARKER_RESPONSE_SUBTYPE     \/\/ marker response subtype$/;"	e	enum:__anon7
AD_MAX_TX_IN_SECOND	bond_3ad.c	37;"	d	file:
AD_MULTICAST_LACPDU_ADDR	bond_3ad.h	36;"	d
AD_MUX_ATTACHED	bond_3ad.h	/^	AD_MUX_ATTACHED,       \/\/ mux machine$/;"	e	enum:__anon4
AD_MUX_COLLECTING_DISTRIBUTING	bond_3ad.h	/^	AD_MUX_COLLECTING_DISTRIBUTING \/\/ mux machine$/;"	e	enum:__anon4
AD_MUX_DETACHED	bond_3ad.h	/^	AD_MUX_DETACHED,       \/\/ mux machine$/;"	e	enum:__anon4
AD_MUX_DUMMY	bond_3ad.h	/^	AD_MUX_DUMMY,$/;"	e	enum:__anon4
AD_MUX_WAITING	bond_3ad.h	/^	AD_MUX_WAITING,	       \/\/ mux machine$/;"	e	enum:__anon4
AD_NO_PERIODIC	bond_3ad.h	/^	AD_NO_PERIODIC,	       \/\/ periodic machine$/;"	e	enum:__anon3
AD_PARTNER_CHURN_TIMER	bond_3ad.h	/^	AD_PARTNER_CHURN_TIMER,$/;"	e	enum:__anon8
AD_PERIODIC_DUMMY	bond_3ad.h	/^	AD_PERIODIC_DUMMY,$/;"	e	enum:__anon3
AD_PERIODIC_TIMER	bond_3ad.h	/^	AD_PERIODIC_TIMER,$/;"	e	enum:__anon8
AD_PERIODIC_TX	bond_3ad.h	/^	AD_PERIODIC_TX	   \/\/ periodic machine$/;"	e	enum:__anon3
AD_PORT_ACTOR_CHURN	bond_3ad.c	61;"	d	file:
AD_PORT_BEGIN	bond_3ad.c	59;"	d	file:
AD_PORT_LACP_ENABLED	bond_3ad.c	60;"	d	file:
AD_PORT_MATCHED	bond_3ad.c	65;"	d	file:
AD_PORT_MOVED	bond_3ad.c	68;"	d	file:
AD_PORT_PARTNER_CHURN	bond_3ad.c	62;"	d	file:
AD_PORT_READY	bond_3ad.c	63;"	d	file:
AD_PORT_READY_N	bond_3ad.c	64;"	d	file:
AD_PORT_SELECTED	bond_3ad.c	67;"	d	file:
AD_PORT_STANDBY	bond_3ad.c	66;"	d	file:
AD_RX_CURRENT	bond_3ad.h	/^	AD_RX_CURRENT	      \/\/ rx Machine$/;"	e	enum:__anon2
AD_RX_DEFAULTED	bond_3ad.h	/^	AD_RX_DEFAULTED,      \/\/ rx Machine$/;"	e	enum:__anon2
AD_RX_DUMMY	bond_3ad.h	/^	AD_RX_DUMMY,$/;"	e	enum:__anon2
AD_RX_EXPIRED	bond_3ad.h	/^	AD_RX_EXPIRED,	      \/\/ rx Machine$/;"	e	enum:__anon2
AD_RX_INITIALIZE	bond_3ad.h	/^	AD_RX_INITIALIZE,     \/\/ rx Machine$/;"	e	enum:__anon2
AD_RX_LACP_DISABLED	bond_3ad.h	/^	AD_RX_LACP_DISABLED,  \/\/ rx Machine$/;"	e	enum:__anon2
AD_RX_PORT_DISABLED	bond_3ad.h	/^	AD_RX_PORT_DISABLED,  \/\/ rx Machine$/;"	e	enum:__anon2
AD_SHORT_TIMEOUT	bond_3ad.c	34;"	d	file:
AD_SHORT_TIMEOUT_TIME	bond_3ad.c	43;"	d	file:
AD_SLOW_PERIODIC	bond_3ad.h	/^	AD_SLOW_PERIODIC,      \/\/ periodic machine$/;"	e	enum:__anon3
AD_SLOW_PERIODIC_TIME	bond_3ad.c	42;"	d	file:
AD_SPEED_KEY_BITS	bond_3ad.c	78;"	d	file:
AD_STANDBY	bond_3ad.c	36;"	d	file:
AD_STATE_AGGREGATION	bond_3ad.c	51;"	d	file:
AD_STATE_COLLECTING	bond_3ad.c	53;"	d	file:
AD_STATE_DEFAULTED	bond_3ad.c	55;"	d	file:
AD_STATE_DISTRIBUTING	bond_3ad.c	54;"	d	file:
AD_STATE_EXPIRED	bond_3ad.c	56;"	d	file:
AD_STATE_LACP_ACTIVITY	bond_3ad.c	49;"	d	file:
AD_STATE_LACP_TIMEOUT	bond_3ad.c	50;"	d	file:
AD_STATE_SYNCHRONIZATION	bond_3ad.c	52;"	d	file:
AD_TIMER_INTERVAL	bond_3ad.h	33;"	d
AD_TRANSMIT	bond_3ad.h	/^	AD_TRANSMIT	   \/\/ tx Machine$/;"	e	enum:__anon5
AD_TX_DUMMY	bond_3ad.h	/^	AD_TX_DUMMY,$/;"	e	enum:__anon5
AD_TYPE_LACPDU	bond_3ad.h	/^	AD_TYPE_LACPDU = 1,    \/\/ type lacpdu$/;"	e	enum:__anon6
AD_TYPE_MARKER	bond_3ad.h	/^	AD_TYPE_MARKER	   \/\/ type marker$/;"	e	enum:__anon6
AD_USER_KEY_BITS	bond_3ad.c	79;"	d	file:
AD_WAIT_WHILE_TIMER	bond_3ad.h	/^	AD_WAIT_WHILE_TIMER$/;"	e	enum:__anon8
ALB_TIMER_TICKS_PER_SEC	bond_alb.c	44;"	d	file:
BOND_AD_INFO	bond_3ad.h	254;"	d
BOND_ALB_INFO	bond_alb.h	32;"	d
BOND_ALB_LP_INTERVAL	bond_alb.c	49;"	d	file:
BOND_ALB_LP_TICKS	bond_alb.c	56;"	d	file:
BOND_ARP_VALIDATE_ACTIVE	bonding.h	308;"	d
BOND_ARP_VALIDATE_ALL	bonding.h	310;"	d
BOND_ARP_VALIDATE_BACKUP	bonding.h	309;"	d
BOND_ARP_VALIDATE_NONE	bonding.h	307;"	d
BOND_ETH_P_LACPDU	bond_3ad.h	31;"	d
BOND_FOM_ACTIVE	bonding.h	304;"	d
BOND_FOM_FOLLOW	bonding.h	305;"	d
BOND_FOM_NONE	bonding.h	303;"	d
BOND_IS_OK	bonding.h	52;"	d
BOND_LINK_ARP_INTERV	bond_main.c	88;"	d	file:
BOND_LINK_MON_INTERV	bond_main.c	87;"	d	file:
BOND_LINK_NOCHANGE	bonding.h	211;"	d
BOND_LINK_NOCHANGE	bonding.h	216;"	d
BOND_MAX_ARP_TARGETS	bonding.h	32;"	d
BOND_MAX_MODENAME_LEN	bonding.h	177;"	d
BOND_PRI_RESELECT_ALWAYS	bonding.h	299;"	d
BOND_PRI_RESELECT_BETTER	bonding.h	300;"	d
BOND_PRI_RESELECT_FAILURE	bonding.h	301;"	d
BOND_TLB_REBALANCE_INTERVAL	bond_alb.c	45;"	d	file:
BOND_TLB_REBALANCE_TICKS	bond_alb.c	53;"	d	file:
BOND_VLAN_FEATURES	bond_main.c	1470;"	d	file:
DRV_DESCRIPTION	bonding.h	30;"	d
DRV_NAME	bonding.h	29;"	d
DRV_RELDATE	bonding.h	28;"	d
DRV_VERSION	bond_main.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	bonding.h	27;"	d
IOCTL	bonding.h	79;"	d
IS_UP	bonding.h	42;"	d
MAC_ADDRESS_COMPARE	bond_3ad.c	90;"	d	file:
MAX_LP_BURST	bond_alb.c	66;"	d	file:
MULTICAST_LACPDU_ADDR	bond_3ad.h	35;"	d
PKT_TYPE_LACPDU	bond_3ad.h	32;"	d
RLB_ARP_BURST_SIZE	bond_alb.c	72;"	d	file:
RLB_HASH_TABLE_SIZE	bond_alb.c	69;"	d	file:
RLB_NULL_INDEX	bond_alb.c	70;"	d	file:
RLB_PROMISC_TIMEOUT	bond_alb.c	79;"	d	file:
RLB_UPDATE_DELAY	bond_alb.c	71;"	d	file:
RLB_UPDATE_RETRY	bond_alb.c	73;"	d	file:
SEQ_START_TOKEN	bond_main.c	3382;"	d	file:
SLAVE_AD_INFO	bond_3ad.h	255;"	d
SLAVE_IS_OK	bonding.h	60;"	d
SLAVE_TLB_INFO	bond_alb.h	33;"	d
TLB_HASH_TABLE_SIZE	bond_alb.c	59;"	d	file:
TLB_NULL_INDEX	bond_alb.c	65;"	d	file:
TX_QUEUE_OVERRIDE	bonding.h	72;"	d
USES_PRIMARY	bonding.h	67;"	d
_LINUX_BONDING_H	bonding.h	16;"	d
__BOND_3AD_H__	bond_3ad.h	24;"	d
__BOND_ALB_H__	bond_alb.h	24;"	d
__ad_timer_to_ticks	bond_3ad.c	/^static u16 __ad_timer_to_ticks(u16 timer_type, u16 par)$/;"	f	file:
__agg_ports_are_ready	bond_3ad.c	/^static int __agg_ports_are_ready(struct aggregator *aggregator)$/;"	f	file:
__attach_bond_to_agg	bond_3ad.c	/^static void __attach_bond_to_agg(struct port *port)$/;"	f	file:
__attribute_used__	bonding.mod.c	/^__attribute_used__$/;"	v	file:
__attribute_used__	bonding.mod.c	/^__attribute_used__$/;"	v	typeref:struct:____versions	file:
__bond_resend_igmp_join_requests	bond_main.c	/^static void __bond_resend_igmp_join_requests(struct net_device *dev)$/;"	f	file:
__check_agg_selection_timer	bond_3ad.c	/^static inline int __check_agg_selection_timer(struct port *port)$/;"	f	file:
__choose_matched	bond_3ad.c	/^static void __choose_matched(struct lacpdu *lacpdu, struct port *port)$/;"	f	file:
__detach_bond_from_agg	bond_3ad.c	/^static void __detach_bond_from_agg(struct port *port)$/;"	f	file:
__disable_port	bond_3ad.c	/^static inline void __disable_port(struct port *port)$/;"	f	file:
__enable_port	bond_3ad.c	/^static inline void __enable_port(struct port *port)$/;"	f	file:
__get_active_agg	bond_3ad.c	/^static struct aggregator *__get_active_agg(struct aggregator *aggregator)$/;"	f	file:
__get_agg_bandwidth	bond_3ad.c	/^static u32 __get_agg_bandwidth(struct aggregator *aggregator)$/;"	f	file:
__get_agg_selection_mode	bond_3ad.c	/^static inline u32 __get_agg_selection_mode(struct port *port)$/;"	f	file:
__get_bond_by_port	bond_3ad.c	/^static inline struct bonding *__get_bond_by_port(struct port *port)$/;"	f	file:
__get_duplex	bond_3ad.c	/^static u8 __get_duplex(struct port *port)$/;"	f	file:
__get_first_agg	bond_3ad.c	/^static inline struct aggregator *__get_first_agg(struct port *port)$/;"	f	file:
__get_first_port	bond_3ad.c	/^static inline struct port *__get_first_port(struct bonding *bond)$/;"	f	file:
__get_link_speed	bond_3ad.c	/^static u16 __get_link_speed(struct port *port)$/;"	f	file:
__get_next_agg	bond_3ad.c	/^static inline struct aggregator *__get_next_agg(struct aggregator *aggregator)$/;"	f	file:
__get_next_port	bond_3ad.c	/^static inline struct port *__get_next_port(struct port *port)$/;"	f	file:
__get_rx_machine_lock	bond_3ad.c	/^static inline void __get_rx_machine_lock(struct port *port)$/;"	f	file:
__initialize_port_locks	bond_3ad.c	/^static inline void __initialize_port_locks(struct port *port)$/;"	f	file:
__port_is_enabled	bond_3ad.c	/^static inline int __port_is_enabled(struct port *port)$/;"	f	file:
__record_default	bond_3ad.c	/^static void __record_default(struct port *port)$/;"	f	file:
__record_pdu	bond_3ad.c	/^static void __record_pdu(struct lacpdu *lacpdu, struct port *port)$/;"	f	file:
__release_rx_machine_lock	bond_3ad.c	/^static inline void __release_rx_machine_lock(struct port *port)$/;"	f	file:
__set_agg_ports_ready	bond_3ad.c	/^static void __set_agg_ports_ready(struct aggregator *aggregator, int val)$/;"	f	file:
__this_module	bonding.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__update_default_selected	bond_3ad.c	/^static void __update_default_selected(struct port *port)$/;"	f	file:
__update_lacpdu_from_port	bond_3ad.c	/^static inline void __update_lacpdu_from_port(struct port *port)$/;"	f	file:
__update_ntt	bond_3ad.c	/^static void __update_ntt(struct lacpdu *lacpdu, struct port *port)$/;"	f	file:
__update_selected	bond_3ad.c	/^static void __update_selected(struct lacpdu *lacpdu, struct port *port)$/;"	f	file:
_lock_rx_hashtbl	bond_alb.c	/^static inline void _lock_rx_hashtbl(struct bonding *bond)$/;"	f	file:
_lock_tx_hashtbl	bond_alb.c	/^static inline void _lock_tx_hashtbl(struct bonding *bond)$/;"	f	file:
_simple_hash	bond_alb.c	/^static inline u8 _simple_hash(const u8 *hash_start, int hash_size)$/;"	f	file:
_unlock_rx_hashtbl	bond_alb.c	/^static inline void _unlock_rx_hashtbl(struct bonding *bond)$/;"	f	file:
_unlock_tx_hashtbl	bond_alb.c	/^static inline void _unlock_tx_hashtbl(struct bonding *bond)$/;"	f	file:
actor_admin_aggregator_key	bond_3ad.h	/^	u16 actor_admin_aggregator_key;$/;"	m	struct:aggregator
actor_admin_port_key	bond_3ad.h	/^	u16 actor_admin_port_key;$/;"	m	struct:port
actor_admin_port_state	bond_3ad.h	/^	u8 actor_admin_port_state;$/;"	m	struct:port
actor_information_length	bond_3ad.h	/^	u8 actor_information_length; \/\/ = 20$/;"	m	struct:lacpdu
actor_key	bond_3ad.h	/^	__be16 actor_key;$/;"	m	struct:lacpdu
actor_oper_aggregator_key	bond_3ad.h	/^	u16 actor_oper_aggregator_key;$/;"	m	struct:aggregator
actor_oper_port_key	bond_3ad.h	/^	u16 actor_oper_port_key;$/;"	m	struct:port
actor_oper_port_state	bond_3ad.h	/^	u8 actor_oper_port_state;$/;"	m	struct:port
actor_port	bond_3ad.h	/^	__be16 actor_port;$/;"	m	struct:lacpdu
actor_port_aggregator_identifier	bond_3ad.h	/^	u16 actor_port_aggregator_identifier;$/;"	m	struct:port
actor_port_number	bond_3ad.h	/^	u16 actor_port_number;$/;"	m	struct:port
actor_port_priority	bond_3ad.h	/^	__be16 actor_port_priority;$/;"	m	struct:lacpdu
actor_port_priority	bond_3ad.h	/^	u16 actor_port_priority;$/;"	m	struct:port
actor_state	bond_3ad.h	/^	u8 actor_state;$/;"	m	struct:lacpdu
actor_system	bond_3ad.h	/^	struct mac_addr actor_system;	       \/\/ This parameter is added here although it is not specified in the standard, just for simplification$/;"	m	struct:port	typeref:struct:port::mac_addr
actor_system	bond_3ad.h	/^	struct mac_addr actor_system;$/;"	m	struct:lacpdu	typeref:struct:lacpdu::mac_addr
actor_system_priority	bond_3ad.h	/^	__be16 actor_system_priority;$/;"	m	struct:lacpdu
actor_system_priority	bond_3ad.h	/^	u16 actor_system_priority;	 \/\/ This parameter is added here although it is not specified in the standard, just for simplification$/;"	m	struct:port
ad_agg_selection_logic	bond_3ad.c	/^static void ad_agg_selection_logic(struct aggregator *aggregator)$/;"	f	file:
ad_bond_info	bond_3ad.h	/^struct ad_bond_info {$/;"	s
ad_clear_agg	bond_3ad.c	/^static void ad_clear_agg(struct aggregator *aggregator)$/;"	f	file:
ad_delta_in_ticks	bond_3ad.c	/^static const int ad_delta_in_ticks = (AD_TIMER_INTERVAL * HZ) \/ 1000;$/;"	v	file:
ad_disable_collecting_distributing	bond_3ad.c	/^static void ad_disable_collecting_distributing(struct port *port)$/;"	f	file:
ad_enable_collecting_distributing	bond_3ad.c	/^static void ad_enable_collecting_distributing(struct port *port)$/;"	f	file:
ad_header	bond_3ad.h	/^	struct ad_header ad_header;$/;"	m	struct:bond_marker_header	typeref:struct:bond_marker_header::ad_header
ad_header	bond_3ad.h	/^	struct ad_header ad_header;$/;"	m	struct:lacpdu_header	typeref:struct:lacpdu_header::ad_header
ad_header	bond_3ad.h	/^typedef struct ad_header {$/;"	s
ad_header_t	bond_3ad.h	/^} ad_header_t;$/;"	t	typeref:struct:ad_header
ad_info	bonding.h	/^	struct   ad_bond_info ad_info;$/;"	m	struct:bonding	typeref:struct:bonding::ad_bond_info
ad_info	bonding.h	/^	struct ad_slave_info ad_info; \/* HUGE - better to dynamically alloc *\/$/;"	m	struct:slave	typeref:struct:slave::ad_slave_info
ad_initialize_agg	bond_3ad.c	/^static void ad_initialize_agg(struct aggregator *aggregator)$/;"	f	file:
ad_initialize_lacpdu	bond_3ad.c	/^static void ad_initialize_lacpdu(struct lacpdu *lacpdu)$/;"	f	file:
ad_initialize_port	bond_3ad.c	/^static void ad_initialize_port(struct port *port, int lacp_fast)$/;"	f	file:
ad_lacpdu_send	bond_3ad.c	/^static int ad_lacpdu_send(struct port *port)$/;"	f	file:
ad_marker_info_received	bond_3ad.c	/^static void ad_marker_info_received(struct bond_marker *marker_info,$/;"	f	file:
ad_marker_response_received	bond_3ad.c	/^static void ad_marker_response_received(struct bond_marker *marker,$/;"	f	file:
ad_marker_send	bond_3ad.c	/^static int ad_marker_send(struct port *port, struct bond_marker *marker)$/;"	f	file:
ad_mux_machine	bond_3ad.c	/^static void ad_mux_machine(struct port *port)$/;"	f	file:
ad_periodic_machine	bond_3ad.c	/^static void ad_periodic_machine(struct port *port)$/;"	f	file:
ad_pkt_type	bond_3ad.h	/^	struct packet_type ad_pkt_type;$/;"	m	struct:ad_bond_info	typeref:struct:ad_bond_info::packet_type
ad_port_selection_logic	bond_3ad.c	/^static void ad_port_selection_logic(struct port *port)$/;"	f	file:
ad_rx_machine	bond_3ad.c	/^static void ad_rx_machine(struct lacpdu *lacpdu, struct port *port)$/;"	f	file:
ad_slave_info	bond_3ad.h	/^struct ad_slave_info {$/;"	s
ad_system	bond_3ad.h	/^typedef struct ad_system {$/;"	s
ad_system_t	bond_3ad.h	/^} ad_system_t;$/;"	t	typeref:struct:ad_system
ad_ticks_per_sec	bond_3ad.c	/^static u16 ad_ticks_per_sec;$/;"	v	file:
ad_timer	bond_3ad.h	/^	struct timer_list ad_timer;$/;"	m	struct:ad_bond_info	typeref:struct:ad_bond_info::timer_list
ad_timers_t	bond_3ad.h	/^} ad_timers_t;$/;"	t	typeref:enum:__anon8
ad_tx_machine	bond_3ad.c	/^static void ad_tx_machine(struct port *port)$/;"	f	file:
ad_work	bonding.h	/^	struct   work_struct ad_work;$/;"	m	struct:bonding	typeref:struct:bonding::work_struct
agg_select_mode	bond_3ad.h	/^	u32 agg_select_mode;	    \/\/ Mode of selection of active aggregator(bandwidth\/count)$/;"	m	struct:ad_bond_info
agg_select_timer	bond_3ad.h	/^	u32 agg_select_timer;	    \/\/ Timer to select aggregator after all adapter's hand shakes$/;"	m	struct:ad_bond_info
agg_selection_t	bond_3ad.h	/^} agg_selection_t;$/;"	t	typeref:enum:__anon1
aggregator	bond_3ad.h	/^	struct aggregator *aggregator;	   \/\/ pointer to an aggregator that this port related to$/;"	m	struct:port	typeref:struct:port::aggregator
aggregator	bond_3ad.h	/^	struct aggregator aggregator;	    \/\/ 802.3ad aggregator structure$/;"	m	struct:ad_slave_info	typeref:struct:ad_slave_info::aggregator
aggregator	bond_3ad.h	/^typedef struct aggregator {$/;"	s
aggregator_identifier	bond_3ad.c	/^static u16 aggregator_identifier;$/;"	v	file:
aggregator_identifier	bond_3ad.h	/^	u16 aggregator_identifier;$/;"	m	struct:aggregator
aggregator_mac_address	bond_3ad.h	/^	struct mac_addr aggregator_mac_address;$/;"	m	struct:aggregator	typeref:struct:aggregator::mac_addr
aggregator_t	bond_3ad.h	/^} aggregator_t;$/;"	t	typeref:struct:aggregator
alb_bond_info	bond_alb.h	/^struct alb_bond_info {$/;"	s
alb_change_hw_addr_on_detach	bond_alb.c	/^static void alb_change_hw_addr_on_detach(struct bonding *bond, struct slave *slave)$/;"	f	file:
alb_delta_in_ticks	bond_alb.c	/^static const int alb_delta_in_ticks = HZ \/ ALB_TIMER_TICKS_PER_SEC;$/;"	v	file:
alb_fasten_mac_swap	bond_alb.c	/^static void alb_fasten_mac_swap(struct bonding *bond, struct slave *slave1,$/;"	f	file:
alb_handle_addr_collision_on_attach	bond_alb.c	/^static int alb_handle_addr_collision_on_attach(struct bonding *bond, struct slave *slave)$/;"	f	file:
alb_info	bonding.h	/^	struct   alb_bond_info alb_info;$/;"	m	struct:bonding	typeref:struct:bonding::alb_bond_info
alb_send_learning_packets	bond_alb.c	/^static void alb_send_learning_packets(struct slave *slave, u8 mac_addr[])$/;"	f	file:
alb_set_mac_address	bond_alb.c	/^static int alb_set_mac_address(struct bonding *bond, void *addr)$/;"	f	file:
alb_set_slave_mac_addr	bond_alb.c	/^static int alb_set_slave_mac_addr(struct slave *slave, u8 addr[], int hw)$/;"	f	file:
alb_swap_mac_addr	bond_alb.c	/^static void alb_swap_mac_addr(struct bonding *bond, struct slave *slave1, struct slave *slave2)$/;"	f	file:
alb_timer	bond_alb.h	/^	struct timer_list	alb_timer;$/;"	m	struct:alb_bond_info	typeref:struct:alb_bond_info::timer_list
alb_work	bonding.h	/^	struct   work_struct alb_work;$/;"	m	struct:bonding	typeref:struct:bonding::work_struct
arp_interval	bond_main.c	/^static int arp_interval = BOND_LINK_ARP_INTERV;$/;"	v	file:
arp_interval	bonding.h	/^	int arp_interval;$/;"	m	struct:bond_params
arp_ip_count	bond_main.c	/^static int arp_ip_count	= 0;$/;"	v	file:
arp_ip_target	bond_main.c	/^static char *arp_ip_target[BOND_MAX_ARP_TARGETS] = { NULL, };$/;"	v	file:
arp_mon_pt	bonding.h	/^	struct   packet_type arp_mon_pt;$/;"	m	struct:bonding	typeref:struct:bonding::packet_type
arp_pkt	bond_alb.c	/^static inline struct arp_pkt *arp_pkt(const struct sk_buff *skb)$/;"	f	file:
arp_pkt	bond_alb.c	/^struct arp_pkt {$/;"	s	file:
arp_target	bond_main.c	/^static __be32 arp_target[BOND_MAX_ARP_TARGETS] = { 0, } ;$/;"	v	file:
arp_targets	bonding.h	/^	__be32 arp_targets[BOND_MAX_ARP_TARGETS];$/;"	m	struct:bond_params
arp_validate	bond_main.c	/^static char *arp_validate = NULL;$/;"	v	file:
arp_validate	bonding.h	/^	int arp_validate;$/;"	m	struct:bond_params
arp_validate_tbl	bond_main.c	/^struct bond_parm_tbl arp_validate_tbl[] = {$/;"	v	typeref:struct:bond_parm_tbl
arp_work	bonding.h	/^	struct   work_struct arp_work;$/;"	m	struct:bonding	typeref:struct:bonding::work_struct
assigned	bond_alb.h	/^	u8  assigned;		\/* checking whether this entry is assigned *\/$/;"	m	struct:rlb_client_info
block_netpoll_tx	bonding.h	/^static inline void block_netpoll_tx(void)$/;"	f
block_netpoll_tx	bonding.h	148;"	d
bond_3ad_adapter_duplex_changed	bond_3ad.c	/^void bond_3ad_adapter_duplex_changed(struct slave *slave)$/;"	f
bond_3ad_adapter_speed_changed	bond_3ad.c	/^void bond_3ad_adapter_speed_changed(struct slave *slave)$/;"	f
bond_3ad_bind_slave	bond_3ad.c	/^int bond_3ad_bind_slave(struct slave *slave)$/;"	f
bond_3ad_get_active_agg_info	bond_3ad.c	/^int bond_3ad_get_active_agg_info(struct bonding *bond, struct ad_info *ad_info)$/;"	f
bond_3ad_handle_link_change	bond_3ad.c	/^void bond_3ad_handle_link_change(struct slave *slave, char link)$/;"	f
bond_3ad_initialize	bond_3ad.c	/^void bond_3ad_initialize(struct bonding *bond, u16 tick_resolution, int lacp_fast)$/;"	f
bond_3ad_lacpdu_recv	bond_3ad.c	/^int bond_3ad_lacpdu_recv(struct sk_buff *skb, struct net_device *dev, struct packet_type* ptype, struct net_device *orig_dev)$/;"	f
bond_3ad_rx_indication	bond_3ad.c	/^static void bond_3ad_rx_indication(struct lacpdu *lacpdu, struct slave *slave, u16 length)$/;"	f	file:
bond_3ad_set_carrier	bond_3ad.c	/^int bond_3ad_set_carrier(struct bonding *bond)$/;"	f
bond_3ad_state_machine_handler	bond_3ad.c	/^void bond_3ad_state_machine_handler(void *work_data)$/;"	f
bond_3ad_unbind_slave	bond_3ad.c	/^void bond_3ad_unbind_slave(struct slave *slave)$/;"	f
bond_3ad_xmit_xor	bond_3ad.c	/^int bond_3ad_xmit_xor(struct sk_buff *skb, struct net_device *dev)$/;"	f
bond_ab_arp_commit	bond_main.c	/^static void bond_ab_arp_commit(struct bonding *bond, int delta_in_ticks)$/;"	f	file:
bond_ab_arp_inspect	bond_main.c	/^static int bond_ab_arp_inspect(struct bonding *bond, int delta_in_ticks)$/;"	f	file:
bond_ab_arp_probe	bond_main.c	/^static void bond_ab_arp_probe(struct bonding *bond)$/;"	f	file:
bond_activebackup_arp_mon	bond_main.c	/^void bond_activebackup_arp_mon(void *work_data)$/;"	f
bond_add_vlan	bond_main.c	/^static int bond_add_vlan(struct bonding *bond, unsigned short vlan_id)$/;"	f	file:
bond_add_vlans_on_slave	bond_main.c	/^static void bond_add_vlans_on_slave(struct bonding *bond, struct net_device *slave_dev)$/;"	f	file:
bond_alb_clear_vlan	bond_alb.c	/^void bond_alb_clear_vlan(struct bonding *bond, unsigned short vlan_id)$/;"	f
bond_alb_deinit_slave	bond_alb.c	/^void bond_alb_deinit_slave(struct bonding *bond, struct slave *slave)$/;"	f
bond_alb_deinitialize	bond_alb.c	/^void bond_alb_deinitialize(struct bonding *bond)$/;"	f
bond_alb_handle_active_change	bond_alb.c	/^void bond_alb_handle_active_change(struct bonding *bond, struct slave *new_slave)$/;"	f
bond_alb_handle_link_change	bond_alb.c	/^void bond_alb_handle_link_change(struct bonding *bond, struct slave *slave, char link)$/;"	f
bond_alb_init_slave	bond_alb.c	/^int bond_alb_init_slave(struct bonding *bond, struct slave *slave)$/;"	f
bond_alb_initialize	bond_alb.c	/^int bond_alb_initialize(struct bonding *bond, int rlb_enabled)$/;"	f
bond_alb_monitor	bond_alb.c	/^void bond_alb_monitor(void *work_data)$/;"	f
bond_alb_set_mac_address	bond_alb.c	/^int bond_alb_set_mac_address(struct net_device *bond_dev, void *addr)$/;"	f
bond_alb_xmit	bond_alb.c	/^int bond_alb_xmit(struct sk_buff *skb, struct net_device *bond_dev)$/;"	f
bond_arp_rcv	bond_main.c	/^static int bond_arp_rcv(struct sk_buff *skb, struct net_device *dev, struct packet_type *pt, struct net_device *orig_dev)$/;"	f	file:
bond_arp_send	bond_main.c	/^static void bond_arp_send(struct net_device *slave_dev, int arp_op, __be32 dest_ip, __be32 src_ip, unsigned short vlan_id)$/;"	f	file:
bond_arp_send_all	bond_main.c	/^static void bond_arp_send_all(struct bonding *bond, struct slave *slave)$/;"	f	file:
bond_attach_slave	bond_main.c	/^static void bond_attach_slave(struct bonding *bond, struct slave *new_slave)$/;"	f	file:
bond_change_active_slave	bond_main.c	/^void bond_change_active_slave(struct bonding *bond, struct slave *new_active)$/;"	f
bond_change_mtu	bond_main.c	/^static int bond_change_mtu(struct net_device *bond_dev, int new_mtu)$/;"	f	file:
bond_check_dev_link	bond_main.c	/^static int bond_check_dev_link(struct bonding *bond, struct net_device *slave_dev, int reporting)$/;"	f	file:
bond_check_params	bond_main.c	/^static int bond_check_params(struct bond_params *params)$/;"	f	file:
bond_close	bond_main.c	/^static int bond_close(struct net_device *bond_dev)$/;"	f	file:
bond_compute_features	bond_main.c	/^static int bond_compute_features(struct bonding *bond)$/;"	f	file:
bond_create	bond_main.c	/^int bond_create(char *name, struct bond_params *params)$/;"	f
bond_create_proc_dir	bond_main.c	/^static void bond_create_proc_dir(void)$/;"	f	file:
bond_create_proc_entry	bond_main.c	/^static int bond_create_proc_entry(struct bonding *bond)$/;"	f	file:
bond_create_slave_symlinks	bond_sysfs.c	/^int bond_create_slave_symlinks(struct net_device *master, struct net_device *slave)$/;"	f
bond_create_sysfs	bond_sysfs.c	/^int bond_create_sysfs(void)$/;"	f
bond_create_sysfs_entry	bond_sysfs.c	/^int bond_create_sysfs_entry(struct bonding *bond)$/;"	f
bond_deinit	bond_main.c	/^static void bond_deinit(struct net_device *bond_dev)$/;"	f	file:
bond_del_vlan	bond_main.c	/^static int bond_del_vlan(struct bonding *bond, unsigned short vlan_id)$/;"	f	file:
bond_del_vlans_from_slave	bond_main.c	/^static void bond_del_vlans_from_slave(struct bonding *bond, struct net_device *slave_dev)$/;"	f	file:
bond_destroy	bond_main.c	/^void bond_destroy(struct bonding *bond)$/;"	f
bond_destroy_proc_dir	bond_main.c	/^static void bond_destroy_proc_dir(void)$/;"	f	file:
bond_destroy_slave_symlinks	bond_sysfs.c	/^void bond_destroy_slave_symlinks(struct net_device *master, struct net_device *slave)$/;"	f
bond_destroy_sysfs	bond_sysfs.c	/^void bond_destroy_sysfs(void)$/;"	f
bond_destroy_sysfs_entry	bond_sysfs.c	/^void bond_destroy_sysfs_entry(struct bonding *bond)$/;"	f
bond_destructor	bond_main.c	/^static void bond_destructor(struct net_device *bond_dev)$/;"	f	file:
bond_detach_slave	bond_main.c	/^static void bond_detach_slave(struct bonding *bond, struct slave *slave)$/;"	f	file:
bond_dev_list	bond_main.c	/^LIST_HEAD(bond_dev_list);$/;"	v
bond_dev_queue_xmit	bond_main.c	/^int bond_dev_queue_xmit(struct bonding *bond, struct sk_buff *skb, struct net_device *slave_dev)$/;"	f
bond_do_fail_over_mac	bond_main.c	/^static void bond_do_fail_over_mac(struct bonding *bond,$/;"	f	file:
bond_do_ioctl	bond_main.c	/^static int bond_do_ioctl(struct net_device *bond_dev, struct ifreq *ifr, int cmd)$/;"	f	file:
bond_enslave	bond_main.c	/^int bond_enslave(struct net_device *bond_dev, struct net_device *slave_dev)$/;"	f
bond_ethtool_get_drvinfo	bond_main.c	/^static void bond_ethtool_get_drvinfo(struct net_device *bond_dev,$/;"	f	file:
bond_ethtool_ops	bond_main.c	/^static struct ethtool_ops bond_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
bond_event_changename	bond_main.c	/^static int bond_event_changename(struct bonding *bond)$/;"	f	file:
bond_find_best_slave	bond_main.c	/^static struct slave *bond_find_best_slave(struct bonding *bond)$/;"	f	file:
bond_for_each_slave	bonding.h	124;"	d
bond_for_each_slave_from	bonding.h	96;"	d
bond_for_each_slave_from_to	bonding.h	111;"	d
bond_free_all	bond_main.c	/^static void bond_free_all(void)$/;"	f	file:
bond_get_bond_by_slave	bonding.h	/^static inline struct bonding *bond_get_bond_by_slave(struct slave *slave)$/;"	f
bond_get_slave_by_dev	bonding.h	/^static inline struct slave *bond_get_slave_by_dev(struct bonding *bond, struct net_device *slave_dev)$/;"	f
bond_get_stats	bond_main.c	/^static struct net_device_stats *bond_get_stats(struct net_device *bond_dev)$/;"	f	file:
bond_glean_dev_ip	bond_main.c	/^static __be32 bond_glean_dev_ip(struct net_device *dev)$/;"	f	file:
bond_glean_dev_ipv6	bond_ipv6.c	/^static void bond_glean_dev_ipv6(struct net_device *dev, struct in6_addr *addr)$/;"	f	file:
bond_has_challenged_slaves	bond_main.c	/^static int bond_has_challenged_slaves(struct bonding *bond)$/;"	f	file:
bond_has_this_ip	bond_main.c	/^static int bond_has_this_ip(struct bonding *bond, __be32 ip)$/;"	f	file:
bond_inet6addr_event	bond_ipv6.c	/^static int bond_inet6addr_event(struct notifier_block *this,$/;"	f	file:
bond_inet6addr_notifier	bond_ipv6.c	/^static struct notifier_block bond_inet6addr_notifier = {$/;"	v	typeref:struct:notifier_block	file:
bond_inetaddr_event	bond_main.c	/^static int bond_inetaddr_event(struct notifier_block *this, unsigned long event, void *ptr)$/;"	f	file:
bond_inetaddr_notifier	bond_main.c	/^static struct notifier_block bond_inetaddr_notifier = {$/;"	v	typeref:struct:notifier_block	file:
bond_info_fops	bond_main.c	/^static struct file_operations bond_info_fops = {$/;"	v	typeref:struct:file_operations	file:
bond_info_open	bond_main.c	/^static int bond_info_open(struct inode *inode, struct file *file)$/;"	f	file:
bond_info_query	bond_main.c	/^static int bond_info_query(struct net_device *bond_dev, struct ifbond *info)$/;"	f	file:
bond_info_seq_next	bond_main.c	/^static void *bond_info_seq_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
bond_info_seq_ops	bond_main.c	/^static struct seq_operations bond_info_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
bond_info_seq_show	bond_main.c	/^static int bond_info_seq_show(struct seq_file *seq, void *v)$/;"	f	file:
bond_info_seq_start	bond_main.c	/^static void *bond_info_seq_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
bond_info_seq_stop	bond_main.c	/^static void bond_info_seq_stop(struct seq_file *seq, void *v)$/;"	f	file:
bond_info_show_master	bond_main.c	/^static void bond_info_show_master(struct seq_file *seq)$/;"	f	file:
bond_info_show_slave	bond_main.c	/^static void bond_info_show_slave(struct seq_file *seq, const struct slave *slave)$/;"	f	file:
bond_init	bond_main.c	/^static int bond_init(struct net_device *bond_dev, struct bond_params *params)$/;"	f	file:
bond_ioctl_change_active	bond_main.c	/^static int bond_ioctl_change_active(struct net_device *bond_dev, struct net_device *slave_dev)$/;"	f	file:
bond_is_dmi_same	bond_main.c	/^static inline int bond_is_dmi_same(struct dev_mc_list *dmi1, struct dev_mc_list *dmi2)$/;"	f	file:
bond_lacp_tbl	bond_main.c	/^struct bond_parm_tbl bond_lacp_tbl[] = {$/;"	v	typeref:struct:bond_parm_tbl
bond_list	bonding.h	/^	struct   list_head bond_list;$/;"	m	struct:bonding	typeref:struct:bonding::list_head
bond_loadbalance_arp_mon	bond_main.c	/^void bond_loadbalance_arp_mon(void *work_data)$/;"	f
bond_marker	bond_3ad.h	/^typedef struct bond_marker {$/;"	s
bond_marker_header	bond_3ad.h	/^typedef struct bond_marker_header {$/;"	s
bond_marker_header_t	bond_3ad.h	/^} bond_marker_header_t;$/;"	t	typeref:struct:bond_marker_header
bond_marker_subtype_t	bond_3ad.h	/^} bond_marker_subtype_t;$/;"	t	typeref:enum:__anon7
bond_marker_t	bond_3ad.h	/^} bond_marker_t;$/;"	t	typeref:struct:bond_marker
bond_master_netdev_event	bond_main.c	/^static int bond_master_netdev_event(unsigned long event, struct net_device *bond_dev)$/;"	f	file:
bond_mc_add	bond_main.c	/^static void bond_mc_add(struct bonding *bond, void *addr, int alen)$/;"	f	file:
bond_mc_delete	bond_main.c	/^static void bond_mc_delete(struct bonding *bond, void *addr, int alen)$/;"	f	file:
bond_mc_list_copy	bond_main.c	/^static int bond_mc_list_copy(struct dev_mc_list *mc_list, struct bonding *bond,$/;"	f	file:
bond_mc_list_destroy	bond_main.c	/^static void bond_mc_list_destroy(struct bonding *bond)$/;"	f	file:
bond_mc_list_find_dmi	bond_main.c	/^static struct dev_mc_list *bond_mc_list_find_dmi(struct dev_mc_list *dmi, struct dev_mc_list *mc_list)$/;"	f	file:
bond_mc_list_flush	bond_main.c	/^static void bond_mc_list_flush(struct net_device *bond_dev, struct net_device *slave_dev)$/;"	f	file:
bond_mc_swap	bond_main.c	/^static void bond_mc_swap(struct bonding *bond, struct slave *new_active, struct slave *old_active)$/;"	f	file:
bond_mii_monitor	bond_main.c	/^void bond_mii_monitor(void *work_data)$/;"	f
bond_miimon_commit	bond_main.c	/^static void bond_miimon_commit(struct bonding *bond)$/;"	f	file:
bond_miimon_inspect	bond_main.c	/^static int bond_miimon_inspect(struct bonding *bond)$/;"	f	file:
bond_mode	bond_main.c	/^static int bond_mode	= BOND_MODE_ROUNDROBIN;$/;"	v	file:
bond_mode_name	bond_main.c	/^static const char *bond_mode_name(int mode)$/;"	f	file:
bond_mode_tbl	bond_main.c	/^struct bond_parm_tbl bond_mode_tbl[] = {$/;"	v	typeref:struct:bond_parm_tbl
bond_na_send	bond_ipv6.c	/^static void bond_na_send(struct net_device *slave_dev,$/;"	f	file:
bond_netdev_event	bond_main.c	/^static int bond_netdev_event(struct notifier_block *this, unsigned long event, void *ptr)$/;"	f	file:
bond_netdev_notifier	bond_main.c	/^static struct notifier_block bond_netdev_notifier = {$/;"	v	typeref:struct:notifier_block	file:
bond_netpoll_cleanup	bond_main.c	/^static void bond_netpoll_cleanup(struct net_device *bond_dev)$/;"	f	file:
bond_next_vlan	bond_main.c	/^struct vlan_entry *bond_next_vlan(struct bonding *bond, struct vlan_entry *curr)$/;"	f
bond_open	bond_main.c	/^static int bond_open(struct net_device *bond_dev)$/;"	f	file:
bond_params	bonding.h	/^struct bond_params {$/;"	s
bond_parm_tbl	bonding.h	/^struct bond_parm_tbl {$/;"	s
bond_parse_parm	bond_main.c	/^int bond_parse_parm(const char *buf, struct bond_parm_tbl *tbl)$/;"	f
bond_poll_controller	bond_main.c	/^static void bond_poll_controller(struct net_device *bond_dev)$/;"	f	file:
bond_proc_dir	bond_main.c	/^static struct proc_dir_entry *bond_proc_dir = NULL;$/;"	v	typeref:struct:proc_dir_entry	file:
bond_register_arp	bond_main.c	/^void bond_register_arp(struct bonding *bond)$/;"	f
bond_register_ipv6_notifier	bond_ipv6.c	/^void bond_register_ipv6_notifier(void)$/;"	f
bond_register_ipv6_notifier	bonding.h	/^static inline void bond_register_ipv6_notifier(void)$/;"	f
bond_register_lacpdu	bond_main.c	/^static void bond_register_lacpdu(struct bonding *bond)$/;"	f	file:
bond_release	bond_main.c	/^int bond_release(struct net_device *bond_dev, struct net_device *slave_dev)$/;"	f
bond_release_all	bond_main.c	/^static int bond_release_all(struct net_device *bond_dev)$/;"	f	file:
bond_release_and_destroy	bond_main.c	/^int  bond_release_and_destroy(struct net_device *bond_dev, struct net_device *slave_dev)$/;"	f
bond_remove_proc_entry	bond_main.c	/^static void bond_remove_proc_entry(struct bonding *bond)$/;"	f	file:
bond_resend_igmp_join_requests	bond_main.c	/^static void bond_resend_igmp_join_requests(struct bonding *bond)$/;"	f	file:
bond_resend_igmp_join_requests_delayed	bond_main.c	/^void bond_resend_igmp_join_requests_delayed(void *work_data)$/;"	f
bond_select_active_slave	bond_main.c	/^void bond_select_active_slave(struct bonding *bond)$/;"	f
bond_send_gratuitous_arp	bond_main.c	/^static void bond_send_gratuitous_arp(struct bonding *bond)$/;"	f	file:
bond_send_unsolicited_na	bond_ipv6.c	/^void bond_send_unsolicited_na(struct bonding *bond)$/;"	f
bond_send_unsolicited_na	bonding.h	/^static inline void bond_send_unsolicited_na(struct bonding *bond)$/;"	f
bond_set_allmulti	bond_main.c	/^static void bond_set_allmulti(struct bonding *bond, int inc)$/;"	f	file:
bond_set_carrier	bond_main.c	/^static int bond_set_carrier(struct bonding *bond)$/;"	f	file:
bond_set_mac_address	bond_main.c	/^static int bond_set_mac_address(struct net_device *bond_dev, void *addr)$/;"	f	file:
bond_set_master_3ad_flags	bonding.h	/^static inline void bond_set_master_3ad_flags(struct bonding *bond)$/;"	f
bond_set_master_alb_flags	bonding.h	/^static inline void bond_set_master_alb_flags(struct bonding *bond)$/;"	f
bond_set_mode_ops	bond_main.c	/^void bond_set_mode_ops(struct bonding *bond, int mode)$/;"	f
bond_set_multicast_list	bond_main.c	/^static void bond_set_multicast_list(struct net_device *bond_dev)$/;"	f	file:
bond_set_promiscuity	bond_main.c	/^static void bond_set_promiscuity(struct bonding *bond, int inc)$/;"	f	file:
bond_set_slave_active_flags	bonding.h	/^static inline void bond_set_slave_active_flags(struct slave *slave)$/;"	f
bond_set_slave_inactive_flags	bonding.h	/^static inline void bond_set_slave_inactive_flags(struct slave *slave)$/;"	f
bond_set_xmit_hash_policy	bond_main.c	/^static void bond_set_xmit_hash_policy(struct bonding *bond)$/;"	f	file:
bond_sethwaddr	bond_main.c	/^static int bond_sethwaddr(struct net_device *bond_dev,$/;"	f	file:
bond_setup_by_slave	bond_main.c	/^static void bond_setup_by_slave(struct net_device *bond_dev,$/;"	f	file:
bond_should_change_active	bond_main.c	/^static bool bond_should_change_active(struct bonding *bond)$/;"	f	file:
bond_slave_info_query	bond_main.c	/^static int bond_slave_info_query(struct net_device *bond_dev, struct ifslave *info)$/;"	f	file:
bond_slave_netdev_event	bond_main.c	/^static int bond_slave_netdev_event(unsigned long event, struct net_device *slave_dev)$/;"	f	file:
bond_slave_override	bond_main.c	/^static inline int bond_slave_override(struct bonding *bond,$/;"	f	file:
bond_unregister_arp	bond_main.c	/^void bond_unregister_arp(struct bonding *bond)$/;"	f
bond_unregister_ipv6_notifier	bond_ipv6.c	/^void bond_unregister_ipv6_notifier(void)$/;"	f
bond_unregister_ipv6_notifier	bonding.h	/^static inline void bond_unregister_ipv6_notifier(void)$/;"	f
bond_unregister_lacpdu	bond_main.c	/^static void bond_unregister_lacpdu(struct bonding *bond)$/;"	f	file:
bond_unset_master_3ad_flags	bonding.h	/^static inline void bond_unset_master_3ad_flags(struct bonding *bond)$/;"	f
bond_unset_master_alb_flags	bonding.h	/^static inline void bond_unset_master_alb_flags(struct bonding *bond)$/;"	f
bond_update_speed_duplex	bond_main.c	/^static int bond_update_speed_duplex(struct slave *slave)$/;"	f	file:
bond_validate_arp	bond_main.c	/^static void bond_validate_arp(struct bonding *bond, struct slave *slave, __be32 sip, __be32 tip)$/;"	f	file:
bond_vlan_rx_add_vid	bond_main.c	/^static void bond_vlan_rx_add_vid(struct net_device *bond_dev, uint16_t vid)$/;"	f	file:
bond_vlan_rx_kill_vid	bond_main.c	/^static void bond_vlan_rx_kill_vid(struct net_device *bond_dev, uint16_t vid)$/;"	f	file:
bond_vlan_rx_register	bond_main.c	/^static void bond_vlan_rx_register(struct net_device *bond_dev, struct vlan_group *grp)$/;"	f	file:
bond_work_cancel_all	bond_main.c	/^static void bond_work_cancel_all(struct bonding *bond)$/;"	f	file:
bond_xmit_activebackup	bond_main.c	/^static int bond_xmit_activebackup(struct sk_buff *skb, struct net_device *bond_dev)$/;"	f	file:
bond_xmit_broadcast	bond_main.c	/^static int bond_xmit_broadcast(struct sk_buff *skb, struct net_device *bond_dev)$/;"	f	file:
bond_xmit_hash_policy_l2	bond_main.c	/^static int bond_xmit_hash_policy_l2(struct sk_buff *skb,$/;"	f	file:
bond_xmit_hash_policy_l23	bond_main.c	/^static int bond_xmit_hash_policy_l23(struct sk_buff *skb,$/;"	f	file:
bond_xmit_hash_policy_l34	bond_main.c	/^static int bond_xmit_hash_policy_l34(struct sk_buff *skb,$/;"	f	file:
bond_xmit_roundrobin	bond_main.c	/^static int bond_xmit_roundrobin(struct sk_buff *skb, struct net_device *bond_dev)$/;"	f	file:
bond_xmit_xor	bond_main.c	/^static int bond_xmit_xor(struct sk_buff *skb, struct net_device *bond_dev)$/;"	f	file:
bonding	bonding.h	/^struct bonding {$/;"	s
bonding-objs	Makefile	/^bonding-objs := bond_main.o bond_3ad.o bond_alb.o bond_sysfs.o$/;"	m
bonding_defaults	bond_main.c	/^struct bond_params bonding_defaults;$/;"	v	typeref:struct:bond_params
bonding_exit	bond_main.c	/^module_exit(bonding_exit);$/;"	v
bonding_exit	bond_main.c	/^static void __exit bonding_exit(void)$/;"	f	file:
bonding_group	bond_sysfs.c	/^static struct attribute_group bonding_group = {$/;"	v	typeref:struct:attribute_group	file:
bonding_init	bond_main.c	/^module_init(bonding_init);$/;"	v
bonding_init	bond_main.c	/^static int __init bonding_init(void)$/;"	f	file:
bonding_netdev_xmit_lock_key	bond_main.c	/^static struct lock_class_key bonding_netdev_xmit_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
bonding_rwsem	bond_sysfs.c	/^struct rw_semaphore bonding_rwsem;$/;"	v	typeref:struct:rw_semaphore
bonding_show_active_slave	bond_sysfs.c	/^static ssize_t bonding_show_active_slave(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_ad_actor_key	bond_sysfs.c	/^static ssize_t bonding_show_ad_actor_key(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_ad_aggregator	bond_sysfs.c	/^static ssize_t bonding_show_ad_aggregator(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_ad_num_ports	bond_sysfs.c	/^static ssize_t bonding_show_ad_num_ports(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_ad_partner_key	bond_sysfs.c	/^static ssize_t bonding_show_ad_partner_key(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_ad_partner_mac	bond_sysfs.c	/^static ssize_t bonding_show_ad_partner_mac(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_arp_interval	bond_sysfs.c	/^static ssize_t bonding_show_arp_interval(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_arp_targets	bond_sysfs.c	/^static ssize_t bonding_show_arp_targets(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_arp_validate	bond_sysfs.c	/^static ssize_t bonding_show_arp_validate(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_bonds	bond_sysfs.c	/^static ssize_t bonding_show_bonds(struct class *cls, char *buf)$/;"	f	file:
bonding_show_carrier	bond_sysfs.c	/^static ssize_t bonding_show_carrier(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_downdelay	bond_sysfs.c	/^static ssize_t bonding_show_downdelay(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_fail_over_mac	bond_sysfs.c	/^static ssize_t bonding_show_fail_over_mac(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_lacp	bond_sysfs.c	/^static ssize_t bonding_show_lacp(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_mark_steering	bond_sysfs.c	/^static ssize_t bonding_show_mark_steering(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_mii_status	bond_sysfs.c	/^static ssize_t bonding_show_mii_status(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_miimon	bond_sysfs.c	/^static ssize_t bonding_show_miimon(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_mode	bond_sysfs.c	/^static ssize_t bonding_show_mode(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_n_grat_arp	bond_sysfs.c	/^static ssize_t bonding_show_n_grat_arp(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_n_unsol_na	bond_sysfs.c	/^static ssize_t bonding_show_n_unsol_na(struct class_device *cd,$/;"	f	file:
bonding_show_primary	bond_sysfs.c	/^static ssize_t bonding_show_primary(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_primary_reselect	bond_sysfs.c	/^static ssize_t bonding_show_primary_reselect(struct class_device *cd,$/;"	f	file:
bonding_show_resend_igmp	bond_sysfs.c	/^static ssize_t bonding_show_resend_igmp(struct class_device *d, char *buf)$/;"	f	file:
bonding_show_slaves	bond_sysfs.c	/^static ssize_t bonding_show_slaves(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_updelay	bond_sysfs.c	/^static ssize_t bonding_show_updelay(struct class_device *cd, char *buf)$/;"	f	file:
bonding_show_xmit_hash	bond_sysfs.c	/^static ssize_t bonding_show_xmit_hash(struct class_device *cd, char *buf)$/;"	f	file:
bonding_store_active_slave	bond_sysfs.c	/^static ssize_t bonding_store_active_slave(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_arp_interval	bond_sysfs.c	/^static ssize_t bonding_store_arp_interval(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_arp_targets	bond_sysfs.c	/^static ssize_t bonding_store_arp_targets(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_arp_validate	bond_sysfs.c	/^static ssize_t bonding_store_arp_validate(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_bonds	bond_sysfs.c	/^static ssize_t bonding_store_bonds(struct class *cls, const char *buffer, size_t count)$/;"	f	file:
bonding_store_carrier	bond_sysfs.c	/^static ssize_t bonding_store_carrier(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_downdelay	bond_sysfs.c	/^static ssize_t bonding_store_downdelay(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_fail_over_mac	bond_sysfs.c	/^static ssize_t bonding_store_fail_over_mac(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_lacp	bond_sysfs.c	/^static ssize_t bonding_store_lacp(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_mark_steering	bond_sysfs.c	/^static ssize_t bonding_store_mark_steering(struct class_device *cd,$/;"	f	file:
bonding_store_miimon	bond_sysfs.c	/^static ssize_t bonding_store_miimon(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_mode	bond_sysfs.c	/^static ssize_t bonding_store_mode(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_n_grat_arp	bond_sysfs.c	/^static ssize_t bonding_store_n_grat_arp(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_n_unsol_na	bond_sysfs.c	/^static ssize_t bonding_store_n_unsol_na(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_primary	bond_sysfs.c	/^static ssize_t bonding_store_primary(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_primary_reselect	bond_sysfs.c	/^static ssize_t bonding_store_primary_reselect(struct class_device *cd,$/;"	f	file:
bonding_store_resend_igmp	bond_sysfs.c	/^static ssize_t bonding_store_resend_igmp(struct class_device *d,$/;"	f	file:
bonding_store_slaves	bond_sysfs.c	/^static ssize_t bonding_store_slaves(struct class_device *cd, const char *buffer, size_t count)$/;"	f	file:
bonding_store_updelay	bond_sysfs.c	/^static ssize_t bonding_store_updelay(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
bonding_store_xmit_hash	bond_sysfs.c	/^static ssize_t bonding_store_xmit_hash(struct class_device *cd, const char *buf, size_t count)$/;"	f	file:
collector_information_length	bond_3ad.h	/^	u8 collector_information_length; \/\/ = 16$/;"	m	struct:lacpdu
collector_max_delay	bond_3ad.h	/^	__be16 collector_max_delay;$/;"	m	struct:lacpdu
curr_active_slave	bonding.h	/^	struct   slave *curr_active_slave;$/;"	m	struct:bonding	typeref:struct:bonding::slave
curr_slave_lock	bonding.h	/^	rwlock_t curr_slave_lock;$/;"	m	struct:bonding
current_alb_vlan	bond_alb.h	/^	struct vlan_entry	*current_alb_vlan;$/;"	m	struct:alb_bond_info	typeref:struct:alb_bond_info::vlan_entry
current_arp_slave	bonding.h	/^	struct   slave *current_arp_slave;$/;"	m	struct:bonding	typeref:struct:bonding::slave
debug	bond_main.c	/^int debug = 0;$/;"	v
delay	bonding.h	/^	int    delay;$/;"	m	struct:slave
destination_address	bond_3ad.h	/^	struct mac_addr destination_address;$/;"	m	struct:ad_header	typeref:struct:ad_header::mac_addr
dev	bonding.h	/^	struct   net_device *dev; \/* first - useful for panic debug *\/$/;"	m	struct:bonding	typeref:struct:bonding::net_device
dev	bonding.h	/^	struct net_device *dev; \/* first - useful for panic debug *\/$/;"	m	struct:slave	typeref:struct:slave::net_device
downdelay	bond_main.c	/^static int downdelay	= 0;$/;"	v	file:
downdelay	bonding.h	/^	int downdelay;$/;"	m	struct:bond_params
dprintk	bonding.h	38;"	d
duplex	bonding.h	/^	u8     duplex;$/;"	m	struct:slave
expected_refcount	bond_sysfs.c	/^static int expected_refcount = -1;$/;"	v	file:
fail_over_mac	bond_main.c	/^static char *fail_over_mac = NULL;$/;"	v	file:
fail_over_mac	bonding.h	/^	int fail_over_mac;$/;"	m	struct:bond_params
fail_over_mac_tbl	bond_main.c	/^struct bond_parm_tbl fail_over_mac_tbl[] = {$/;"	v	typeref:struct:bond_parm_tbl
first_slave	bonding.h	/^	struct   slave *first_slave;$/;"	m	struct:bonding	typeref:struct:bonding::slave
flags	bonding.h	/^	u16      flags;$/;"	m	struct:bonding
force_primary	bonding.h	/^	bool     force_primary;$/;"	m	struct:bonding
head	bond_alb.h	/^	u32 head;	\/* Index to the head of the bi-directional clients$/;"	m	struct:tlb_slave_info
hw_addr_len	bond_alb.c	/^	u8      hw_addr_len;$/;"	m	struct:arp_pkt	file:
hw_addr_space	bond_alb.c	/^	__be16  hw_addr_space;$/;"	m	struct:arp_pkt	file:
id	bond_3ad.h	/^	u16 id;$/;"	m	struct:ad_slave_info
igmp_retrans	bonding.h	/^	s8       igmp_retrans;$/;"	m	struct:bonding
ip_dst	bond_alb.c	/^	__be32  ip_dst;			\/* target IP address *\/$/;"	m	struct:arp_pkt	file:
ip_dst	bond_alb.h	/^	__be32 ip_dst;		\/* the client IP address *\/$/;"	m	struct:rlb_client_info
ip_src	bond_alb.c	/^	__be32  ip_src;			\/* sender IP address *\/$/;"	m	struct:arp_pkt	file:
ip_src	bond_alb.h	/^	__be32 ip_src;		\/* the server IP address *\/$/;"	m	struct:rlb_client_info
is_active	bond_3ad.h	/^	u16 is_active;	    \/\/ BOOLEAN. Indicates if this aggregator is active$/;"	m	struct:aggregator
is_enabled	bond_3ad.h	/^	u16 is_enabled;	      \/\/ BOOLEAN$/;"	m	struct:port
is_individual	bond_3ad.h	/^	u16 is_individual;		 \/\/ BOOLEAN$/;"	m	struct:aggregator
is_netpoll_tx_blocked	bonding.h	/^static inline int is_netpoll_tx_blocked(struct net_device *dev)$/;"	f
is_netpoll_tx_blocked	bonding.h	150;"	d
jiffies	bonding.h	/^	unsigned long jiffies;$/;"	m	struct:slave
kill_timers	bonding.h	/^	s8       kill_timers;$/;"	m	struct:bonding
lacp_fast	bond_3ad.h	/^	int lacp_fast;		\/* whether fast periodic tx should be$/;"	m	struct:ad_bond_info
lacp_fast	bond_main.c	/^static int lacp_fast	= 0;$/;"	v	file:
lacp_fast	bonding.h	/^	int lacp_fast;$/;"	m	struct:bond_params
lacp_rate	bond_main.c	/^static char *lacp_rate	= NULL;$/;"	v	file:
lacpdu	bond_3ad.h	/^	struct lacpdu lacpdu;	       \/\/ the lacpdu that will be sent for this port$/;"	m	struct:port	typeref:struct:port::lacpdu
lacpdu	bond_3ad.h	/^	struct lacpdu lacpdu;$/;"	m	struct:lacpdu_header	typeref:struct:lacpdu_header::lacpdu
lacpdu	bond_3ad.h	/^typedef struct lacpdu {$/;"	s
lacpdu_header	bond_3ad.h	/^typedef struct lacpdu_header {$/;"	s
lacpdu_header_t	bond_3ad.h	/^} lacpdu_header_t;$/;"	t	typeref:struct:lacpdu_header
lacpdu_t	bond_3ad.h	/^} lacpdu_t;$/;"	t	typeref:struct:lacpdu
lag_ports	bond_3ad.h	/^	struct port *lag_ports;$/;"	m	struct:aggregator	typeref:struct:aggregator::port
last_arp_rx	bonding.h	/^	unsigned long last_arp_rx;$/;"	m	struct:slave
learning_pkt	bond_alb.c	/^struct learning_pkt {$/;"	s	file:
length_type	bond_3ad.h	/^	__be16 length_type;$/;"	m	struct:ad_header
link	bonding.h	/^	s8     link;    \/* one of BOND_LINK_XXXX *\/$/;"	m	struct:slave
link_failure_count	bonding.h	/^	u32    link_failure_count;$/;"	m	struct:slave
load	bond_alb.h	/^	u32 load;	\/* Each slave sums the loadHistory of all clients$/;"	m	struct:tlb_slave_info
load_history	bond_alb.h	/^	u32 load_history;	\/* This field contains the amount of Bytes$/;"	m	struct:tlb_client_info
lock	bonding.h	/^	rwlock_t lock;$/;"	m	struct:bonding
lp_counter	bond_alb.h	/^	int			lp_counter;$/;"	m	struct:alb_bond_info
mac_addr	bond_3ad.h	/^typedef struct mac_addr {$/;"	s
mac_addr_t	bond_3ad.h	/^} mac_addr_t;$/;"	t	typeref:struct:mac_addr
mac_addr_value	bond_3ad.h	/^	u8 mac_addr_value[ETH_ALEN];$/;"	m	struct:mac_addr
mac_bcast	bond_alb.c	/^static const u8 mac_bcast[ETH_ALEN] = {0xff,0xff,0xff,0xff,0xff,0xff};$/;"	v	file:
mac_dst	bond_alb.c	/^	u8      mac_dst[ETH_ALEN];	\/* target hardware address *\/$/;"	m	struct:arp_pkt	file:
mac_dst	bond_alb.c	/^	u8 mac_dst[ETH_ALEN];$/;"	m	struct:learning_pkt	file:
mac_dst	bond_alb.h	/^	u8  mac_dst[ETH_ALEN];	\/* the client MAC address *\/$/;"	m	struct:rlb_client_info
mac_src	bond_alb.c	/^	u8      mac_src[ETH_ALEN];	\/* sender hardware address *\/$/;"	m	struct:arp_pkt	file:
mac_src	bond_alb.c	/^	u8 mac_src[ETH_ALEN];$/;"	m	struct:learning_pkt	file:
mac_v6_allmcast	bond_alb.c	/^static const u8 mac_v6_allmcast[ETH_ALEN] = {0x33,0x33,0x00,0x00,0x00,0x01};$/;"	v	file:
mark_steering	bonding.h	/^	bool     mark_steering;$/;"	m	struct:bonding
marker	bond_3ad.h	/^	struct bond_marker marker;$/;"	m	struct:bond_marker_header	typeref:struct:bond_marker_header::bond_marker
marker_length	bond_3ad.h	/^	u8 marker_length;	 \/\/  = 0x16$/;"	m	struct:bond_marker
master_ip	bonding.h	/^	__be32   master_ip;$/;"	m	struct:bonding
master_ipv6	bonding.h	/^	struct   in6_addr master_ipv6;$/;"	m	struct:bonding	typeref:struct:bonding::in6_addr
max_bonds	bond_main.c	/^static int max_bonds	= BOND_DEFAULT_MAX_BONDS;$/;"	v	file:
mc_list	bonding.h	/^	struct   dev_mc_list *mc_list;$/;"	m	struct:bonding	typeref:struct:bonding::dev_mc_list
mcast_work	bonding.h	/^	struct   work_struct mcast_work;$/;"	m	struct:bonding	typeref:struct:bonding::work_struct
mii_work	bonding.h	/^	struct   work_struct mii_work;$/;"	m	struct:bonding	typeref:struct:bonding::work_struct
miimon	bond_main.c	/^static int miimon	= BOND_LINK_MON_INTERV;$/;"	v	file:
miimon	bonding.h	/^	int miimon;$/;"	m	struct:bond_params
mode	bond_main.c	/^static char *mode	= NULL;$/;"	v	file:
mode	bonding.h	/^	int mode;$/;"	m	struct:bond_params
mode	bonding.h	/^	int mode;$/;"	m	struct:bond_parm_tbl
modename	bonding.h	/^	char *modename;$/;"	m	struct:bond_parm_tbl
mux_states_t	bond_3ad.h	/^} mux_states_t;$/;"	t	typeref:enum:__anon4
netpoll_block_tx	bond_main.c	/^atomic_t netpoll_block_tx = ATOMIC_INIT(0);$/;"	v
new_link	bonding.h	/^	s8     new_link;$/;"	m	struct:slave
next	bond_alb.h	/^	u32 next;		\/* The next Hash table entry index *\/$/;"	m	struct:rlb_client_info
next	bond_alb.h	/^	u32 next;		\/* The next Hash table entry index, assigned$/;"	m	struct:tlb_client_info
next	bonding.h	/^	struct slave *next;$/;"	m	struct:slave	typeref:struct:slave::slave
next_port_in_aggregator	bond_3ad.h	/^	struct port *next_port_in_aggregator; \/\/ Next port on the linked list of the parent aggregator$/;"	m	struct:port	typeref:struct:port::port
next_rx_slave	bond_alb.h	/^	struct slave		*next_rx_slave;\/* next slave to be assigned$/;"	m	struct:alb_bond_info	typeref:struct:alb_bond_info::slave
ntt	bond_3ad.h	/^	u16 ntt;			 \/\/ BOOLEAN$/;"	m	struct:port
ntt	bond_alb.h	/^	u8  ntt;		\/* flag - need to transmit client info *\/$/;"	m	struct:rlb_client_info
null_mac_addr	bond_3ad.c	/^static struct mac_addr null_mac_addr = {{0, 0, 0, 0, 0, 0}};$/;"	v	typeref:struct:mac_addr	file:
num_grat_arp	bond_main.c	/^static int num_grat_arp = 1;$/;"	v	file:
num_grat_arp	bonding.h	/^	int num_grat_arp;$/;"	m	struct:bond_params
num_of_ports	bond_3ad.h	/^	u16 num_of_ports;$/;"	m	struct:aggregator
num_unsol_na	bond_main.c	/^static int num_unsol_na = 1;$/;"	v	file:
num_unsol_na	bonding.h	/^	int num_unsol_na;$/;"	m	struct:bond_params
op_code	bond_alb.c	/^	__be16  op_code;$/;"	m	struct:arp_pkt	file:
original_flags	bonding.h	/^	u32    original_flags;$/;"	m	struct:slave
original_mtu	bonding.h	/^	u32    original_mtu;$/;"	m	struct:slave
pad	bond_3ad.h	/^	u16 pad;		 \/\/  = 0$/;"	m	struct:bond_marker
padding	bond_alb.c	/^	u8 padding[ETH_ZLEN - ETH_HLEN];$/;"	m	struct:learning_pkt	file:
params	bonding.h	/^	struct   bond_params params;$/;"	m	struct:bonding	typeref:struct:bonding::bond_params
partner_admin_key	bond_3ad.h	/^	u16 partner_admin_key;$/;"	m	struct:port
partner_admin_port_number	bond_3ad.h	/^	u16 partner_admin_port_number;$/;"	m	struct:port
partner_admin_port_priority	bond_3ad.h	/^	u16 partner_admin_port_priority;$/;"	m	struct:port
partner_admin_port_state	bond_3ad.h	/^	u8 partner_admin_port_state;$/;"	m	struct:port
partner_admin_system	bond_3ad.h	/^	struct mac_addr partner_admin_system;$/;"	m	struct:port	typeref:struct:port::mac_addr
partner_admin_system_priority	bond_3ad.h	/^	u16 partner_admin_system_priority;$/;"	m	struct:port
partner_information_length	bond_3ad.h	/^	u8 partner_information_length;	 \/\/ = 20$/;"	m	struct:lacpdu
partner_key	bond_3ad.h	/^	__be16 partner_key;$/;"	m	struct:lacpdu
partner_oper_aggregator_key	bond_3ad.h	/^	u16 partner_oper_aggregator_key;$/;"	m	struct:aggregator
partner_oper_key	bond_3ad.h	/^	u16 partner_oper_key;$/;"	m	struct:port
partner_oper_port_number	bond_3ad.h	/^	u16 partner_oper_port_number;$/;"	m	struct:port
partner_oper_port_priority	bond_3ad.h	/^	u16 partner_oper_port_priority;$/;"	m	struct:port
partner_oper_port_state	bond_3ad.h	/^	u8 partner_oper_port_state;$/;"	m	struct:port
partner_oper_system	bond_3ad.h	/^	struct mac_addr partner_oper_system;$/;"	m	struct:port	typeref:struct:port::mac_addr
partner_oper_system_priority	bond_3ad.h	/^	u16 partner_oper_system_priority;$/;"	m	struct:port
partner_port	bond_3ad.h	/^	__be16 partner_port;$/;"	m	struct:lacpdu
partner_port_priority	bond_3ad.h	/^	__be16 partner_port_priority;$/;"	m	struct:lacpdu
partner_state	bond_3ad.h	/^	u8 partner_state;$/;"	m	struct:lacpdu
partner_system	bond_3ad.h	/^	struct mac_addr partner_system;$/;"	m	struct:aggregator	typeref:struct:aggregator::mac_addr
partner_system	bond_3ad.h	/^	struct mac_addr partner_system;$/;"	m	struct:lacpdu	typeref:struct:lacpdu::mac_addr
partner_system_priority	bond_3ad.h	/^	__be16 partner_system_priority;$/;"	m	struct:lacpdu
partner_system_priority	bond_3ad.h	/^	u16 partner_system_priority;$/;"	m	struct:aggregator
pdu_type_t	bond_3ad.h	/^} pdu_type_t;$/;"	t	typeref:enum:__anon6
per_bond_attrs	bond_sysfs.c	/^static struct attribute *per_bond_attrs[] = {$/;"	v	typeref:struct:attribute	file:
periodic_states_t	bond_3ad.h	/^} periodic_states_t;$/;"	t	typeref:enum:__anon3
perm_hwaddr	bonding.h	/^	u8     perm_hwaddr[ETH_ALEN];$/;"	m	struct:slave
port	bond_3ad.h	/^	struct port port;		    \/\/ 802.3ad port structure$/;"	m	struct:ad_slave_info	typeref:struct:ad_slave_info::port
port	bond_3ad.h	/^typedef struct port {$/;"	s
port_t	bond_3ad.h	/^} port_t;$/;"	t	typeref:struct:port
prev	bond_alb.h	/^	u32 prev;		\/* The previous Hash table entry index *\/$/;"	m	struct:rlb_client_info
prev	bond_alb.h	/^	u32 prev;		\/* The previous Hash table entry index,$/;"	m	struct:tlb_client_info
prev	bonding.h	/^	struct slave *prev;$/;"	m	struct:slave	typeref:struct:slave::slave
pri_reselect_tbl	bond_main.c	/^struct bond_parm_tbl pri_reselect_tbl[] = {$/;"	v	typeref:struct:bond_parm_tbl
primary	bond_main.c	/^static char *primary	= NULL;$/;"	v	file:
primary	bonding.h	/^	char primary[IFNAMSIZ];$/;"	m	struct:bond_params
primary_is_promisc	bond_alb.h	/^	u8			primary_is_promisc;	   \/* boolean *\/$/;"	m	struct:alb_bond_info
primary_reselect	bond_main.c	/^static char *primary_reselect = 0;$/;"	v	file:
primary_reselect	bonding.h	/^	int primary_reselect;$/;"	m	struct:bond_params
primary_slave	bonding.h	/^	struct   slave *primary_slave;$/;"	m	struct:bonding	typeref:struct:bonding::slave
proc_entry	bonding.h	/^	struct   proc_dir_entry *proc_entry;$/;"	m	struct:bonding	typeref:struct:bonding::proc_dir_entry
proc_file_name	bonding.h	/^	char     proc_file_name[IFNAMSIZ];$/;"	m	struct:bonding
prot_addr_len	bond_alb.c	/^	u8      prot_addr_len;$/;"	m	struct:arp_pkt	file:
prot_addr_space	bond_alb.c	/^	__be16  prot_addr_space;$/;"	m	struct:arp_pkt	file:
receive_state	bond_3ad.h	/^	u16 receive_state;		\/\/ BOOLEAN$/;"	m	struct:aggregator
requester_port	bond_3ad.h	/^	u16 requester_port;	 \/\/   The number assigned to the port by the requester$/;"	m	struct:bond_marker
requester_system	bond_3ad.h	/^	struct mac_addr requester_system;      \/\/   The requester's system id$/;"	m	struct:bond_marker	typeref:struct:bond_marker::mac_addr
requester_transaction_id	bond_3ad.h	/^	u32 requester_transaction_id;	\/\/   The transaction id allocated by the requester,$/;"	m	struct:bond_marker
resend_igmp	bond_main.c	/^static int resend_igmp = BOND_DEFAULT_RESEND_IGMP;$/;"	v	file:
resend_igmp	bonding.h	/^	int resend_igmp;$/;"	m	struct:bond_params
reserved_12	bond_3ad.h	/^	u8 reserved_12[12];$/;"	m	struct:lacpdu
reserved_3_1	bond_3ad.h	/^	u8 reserved_3_1[3];	     \/\/ = 0$/;"	m	struct:lacpdu
reserved_3_2	bond_3ad.h	/^	u8 reserved_3_2[3];	     \/\/ = 0$/;"	m	struct:lacpdu
reserved_50	bond_3ad.h	/^	u8 reserved_50[50];	     \/\/ = 0$/;"	m	struct:lacpdu
reserved_90	bond_3ad.h	/^	u8 reserved_90[90];	     \/\/  = 0$/;"	m	struct:bond_marker
rlb_arp_recv	bond_alb.c	/^static int rlb_arp_recv(struct sk_buff *skb, struct net_device *bond_dev, struct packet_type *ptype, struct net_device *orig_dev)$/;"	f	file:
rlb_arp_xmit	bond_alb.c	/^static struct slave *rlb_arp_xmit(struct sk_buff *skb, struct bonding *bond)$/;"	f	file:
rlb_choose_channel	bond_alb.c	/^static struct slave *rlb_choose_channel(struct sk_buff *skb, struct bonding *bond)$/;"	f	file:
rlb_clear_slave	bond_alb.c	/^static void rlb_clear_slave(struct bonding *bond, struct slave *slave)$/;"	f	file:
rlb_clear_vlan	bond_alb.c	/^static void rlb_clear_vlan(struct bonding *bond, unsigned short vlan_id)$/;"	f	file:
rlb_client_info	bond_alb.h	/^struct rlb_client_info {$/;"	s
rlb_deinitialize	bond_alb.c	/^static void rlb_deinitialize(struct bonding *bond)$/;"	f	file:
rlb_enabled	bond_alb.h	/^	int rlb_enabled;$/;"	m	struct:alb_bond_info
rlb_init_table_entry	bond_alb.c	/^static void rlb_init_table_entry(struct rlb_client_info *entry)$/;"	f	file:
rlb_initialize	bond_alb.c	/^static int rlb_initialize(struct bonding *bond)$/;"	f	file:
rlb_interval_counter	bond_alb.h	/^	u32			rlb_interval_counter;$/;"	m	struct:alb_bond_info
rlb_next_rx_slave	bond_alb.c	/^static struct slave *rlb_next_rx_slave(struct bonding *bond)$/;"	f	file:
rlb_pkt_type	bond_alb.h	/^	struct packet_type	rlb_pkt_type;$/;"	m	struct:alb_bond_info	typeref:struct:alb_bond_info::packet_type
rlb_promisc_timeout_counter	bond_alb.h	/^	u32			rlb_promisc_timeout_counter;\/* counts primary$/;"	m	struct:alb_bond_info
rlb_rebalance	bond_alb.c	/^static void rlb_rebalance(struct bonding *bond)$/;"	f	file:
rlb_rebalance	bond_alb.h	/^	u8			rlb_rebalance;	\/* flag - indicates that the$/;"	m	struct:alb_bond_info
rlb_req_update_slave_clients	bond_alb.c	/^static void rlb_req_update_slave_clients(struct bonding *bond, struct slave *slave)$/;"	f	file:
rlb_req_update_subnet_clients	bond_alb.c	/^static void rlb_req_update_subnet_clients(struct bonding *bond, __be32 src_ip)$/;"	f	file:
rlb_teach_disabled_mac_on_primary	bond_alb.c	/^static void rlb_teach_disabled_mac_on_primary(struct bonding *bond, u8 addr[])$/;"	f	file:
rlb_update_client	bond_alb.c	/^static void rlb_update_client(struct rlb_client_info *client_info)$/;"	f	file:
rlb_update_delay_counter	bond_alb.h	/^	u32			rlb_update_delay_counter;$/;"	m	struct:alb_bond_info
rlb_update_entry_from_arp	bond_alb.c	/^static void rlb_update_entry_from_arp(struct bonding *bond, struct arp_pkt *arp)$/;"	f	file:
rlb_update_retry_counter	bond_alb.h	/^	u32			rlb_update_retry_counter;\/* counter of retries$/;"	m	struct:alb_bond_info
rlb_update_rx_clients	bond_alb.c	/^static void rlb_update_rx_clients(struct bonding *bond)$/;"	f	file:
rr_tx_counter	bonding.h	/^	u16      rr_tx_counter;$/;"	m	struct:bonding
rx_hashtbl	bond_alb.h	/^	struct rlb_client_info	*rx_hashtbl;	\/* Receive hash table *\/$/;"	m	struct:alb_bond_info	typeref:struct:alb_bond_info::rlb_client_info
rx_hashtbl_head	bond_alb.h	/^	u32			rx_hashtbl_head;$/;"	m	struct:alb_bond_info
rx_hashtbl_lock	bond_alb.h	/^	spinlock_t		rx_hashtbl_lock;$/;"	m	struct:alb_bond_info
rx_machine_lock	bond_3ad.h	/^	spinlock_t rx_machine_lock; \/\/ To avoid race condition between callback and receive interrupt$/;"	m	struct:ad_slave_info
rx_ntt	bond_alb.h	/^	u8			rx_ntt;	\/* flag - need to transmit$/;"	m	struct:alb_bond_info
rx_states_t	bond_3ad.h	/^} rx_states_t;$/;"	t	typeref:enum:__anon2
send_grat_arp	bonding.h	/^	s8	 send_grat_arp;$/;"	m	struct:bonding
send_unsol_na	bonding.h	/^	s8	 send_unsol_na;$/;"	m	struct:bonding
setup_by_slave	bonding.h	/^	s8	 setup_by_slave;$/;"	m	struct:bonding
slave	bond_3ad.h	/^	struct slave *slave;	    \/\/ pointer to the bond slave that this aggregator belongs to$/;"	m	struct:aggregator	typeref:struct:aggregator::slave
slave	bond_3ad.h	/^	struct slave *slave;	    \/\/ pointer to the bond slave that this port belongs to$/;"	m	struct:port	typeref:struct:port::slave
slave	bond_alb.h	/^	struct slave *slave;	\/* the slave assigned to this client *\/$/;"	m	struct:rlb_client_info	typeref:struct:rlb_client_info::slave
slave	bonding.h	/^struct slave {$/;"	s
slave_cnt	bonding.h	/^	s32      slave_cnt; \/* never change this value outside the attach\/detach wrappers *\/$/;"	m	struct:bonding
slave_do_arp_validate	bonding.h	/^static inline int slave_do_arp_validate(struct bonding *bond,$/;"	f
slave_last_rx	bonding.h	/^static inline unsigned long slave_last_rx(struct bonding *bond,$/;"	f
slaves_support_netpoll	bond_main.c	/^static bool slaves_support_netpoll(struct net_device *bond_dev)$/;"	f	file:
sm_mux_state	bond_3ad.h	/^	mux_states_t sm_mux_state;	\/\/ state machine mux state$/;"	m	struct:port
sm_mux_timer_counter	bond_3ad.h	/^	u16 sm_mux_timer_counter;   \/\/ state machine mux timer counter$/;"	m	struct:port
sm_periodic_state	bond_3ad.h	/^	periodic_states_t sm_periodic_state;\/\/ state machine periodic state$/;"	m	struct:port
sm_periodic_timer_counter	bond_3ad.h	/^	u16 sm_periodic_timer_counter;	\/\/ state machine periodic timer counter$/;"	m	struct:port
sm_rx_state	bond_3ad.h	/^	rx_states_t sm_rx_state;	\/\/ state machine rx state$/;"	m	struct:port
sm_rx_timer_counter	bond_3ad.h	/^	u16 sm_rx_timer_counter;    \/\/ state machine rx timer counter$/;"	m	struct:port
sm_tx_state	bond_3ad.h	/^	tx_states_t sm_tx_state;	\/\/ state machine tx state$/;"	m	struct:port
sm_tx_timer_counter	bond_3ad.h	/^	u16 sm_tx_timer_counter;    \/\/ state machine tx timer counter(allways on - enter to transmit state 3 time per second)$/;"	m	struct:port
sm_vars	bond_3ad.h	/^	u16 sm_vars;	      \/\/ all state machines variables for this port$/;"	m	struct:port
source_address	bond_3ad.h	/^	struct mac_addr source_address;$/;"	m	struct:ad_header	typeref:struct:ad_header::mac_addr
speed	bonding.h	/^	u16    speed;$/;"	m	struct:slave
state	bonding.h	/^	s8     state;   \/* one of BOND_STATE_XXXX *\/$/;"	m	struct:slave
stats	bonding.h	/^	struct   net_device_stats stats;$/;"	m	struct:bonding	typeref:struct:bonding::net_device_stats
subtype	bond_3ad.h	/^	u8 subtype;		     \/\/ = LACP(= 0x01)$/;"	m	struct:lacpdu
subtype	bond_3ad.h	/^	u8 subtype;		 \/\/  = 0x02  (marker PDU)$/;"	m	struct:bond_marker
sys_mac_addr	bond_3ad.h	/^	struct mac_addr sys_mac_addr;$/;"	m	struct:ad_system	typeref:struct:ad_system::mac_addr
sys_priority	bond_3ad.h	/^	u16 sys_priority;$/;"	m	struct:ad_system
system	bond_3ad.h	/^	ad_system_t system;	    \/\/ 802.3ad system structure$/;"	m	struct:ad_bond_info
tag	bond_alb.h	/^	u8 tag;			\/* flag - need to tag skb *\/$/;"	m	struct:rlb_client_info
terminator_length	bond_3ad.h	/^	u8 terminator_length;	     \/\/  = 0x00$/;"	m	struct:bond_marker
terminator_length	bond_3ad.h	/^	u8 terminator_length;	     \/\/ = 0$/;"	m	struct:lacpdu
tlb_choose_channel	bond_alb.c	/^static struct slave *tlb_choose_channel(struct bonding *bond, u32 hash_index, u32 skb_len)$/;"	f	file:
tlb_clear_slave	bond_alb.c	/^static void tlb_clear_slave(struct bonding *bond, struct slave *slave, int save_load)$/;"	f	file:
tlb_client_info	bond_alb.h	/^struct tlb_client_info {$/;"	s
tlb_deinitialize	bond_alb.c	/^static void tlb_deinitialize(struct bonding *bond)$/;"	f	file:
tlb_get_least_loaded_slave	bond_alb.c	/^static struct slave *tlb_get_least_loaded_slave(struct bonding *bond)$/;"	f	file:
tlb_info	bonding.h	/^	struct tlb_slave_info tlb_info;$/;"	m	struct:slave	typeref:struct:slave::tlb_slave_info
tlb_init_slave	bond_alb.c	/^static inline void tlb_init_slave(struct slave *slave)$/;"	f	file:
tlb_init_table_entry	bond_alb.c	/^static inline void tlb_init_table_entry(struct tlb_client_info *entry, int save_load)$/;"	f	file:
tlb_initialize	bond_alb.c	/^static int tlb_initialize(struct bonding *bond)$/;"	f	file:
tlb_slave_info	bond_alb.h	/^struct tlb_slave_info {$/;"	s
tlv_type	bond_3ad.h	/^	u8 tlv_type;		 \/\/  = 0x01  (marker information)$/;"	m	struct:bond_marker
tlv_type_actor_info	bond_3ad.h	/^	u8 tlv_type_actor_info;	      \/\/ = actor information(type\/length\/value)$/;"	m	struct:lacpdu
tlv_type_collector_info	bond_3ad.h	/^	u8 tlv_type_collector_info;	  \/\/ = collector information$/;"	m	struct:lacpdu
tlv_type_partner_info	bond_3ad.h	/^	u8 tlv_type_partner_info;     \/\/ = partner information$/;"	m	struct:lacpdu
tlv_type_terminator	bond_3ad.h	/^	u8 tlv_type_terminator;	     \/\/  = 0x00$/;"	m	struct:bond_marker
tlv_type_terminator	bond_3ad.h	/^	u8 tlv_type_terminator;	     \/\/ = terminator$/;"	m	struct:lacpdu
to_bond	bond_sysfs.c	42;"	d	file:
to_class_dev	bond_sysfs.c	40;"	d	file:
to_net_dev	bond_sysfs.c	41;"	d	file:
transaction_id	bond_3ad.h	/^	u32 transaction_id;	    \/\/ continuous number for identification of Marker PDU's;$/;"	m	struct:port
transmit_state	bond_3ad.h	/^	u16 transmit_state;		\/\/ BOOLEAN$/;"	m	struct:aggregator
tx_bytes	bond_alb.h	/^	u32 tx_bytes;		\/* Each Client acumulates the BytesTx that$/;"	m	struct:tlb_client_info
tx_hashtbl	bond_alb.h	/^	struct tlb_client_info	*tx_hashtbl; \/* Dynamically allocated *\/$/;"	m	struct:alb_bond_info	typeref:struct:alb_bond_info::tlb_client_info
tx_hashtbl_lock	bond_alb.h	/^	spinlock_t		tx_hashtbl_lock;$/;"	m	struct:alb_bond_info
tx_rebalance_counter	bond_alb.h	/^	int			tx_rebalance_counter;$/;"	m	struct:alb_bond_info
tx_slave	bond_alb.h	/^	struct slave *tx_slave;	\/* A pointer to slave used for transmiting$/;"	m	struct:tlb_client_info	typeref:struct:tlb_client_info::slave
tx_states_t	bond_3ad.h	/^} tx_states_t;$/;"	t	typeref:enum:__anon5
type	bond_alb.c	/^	__be16 type;$/;"	m	struct:learning_pkt	file:
unbalanced_load	bond_alb.h	/^	u32			unbalanced_load;$/;"	m	struct:alb_bond_info
unblock_netpoll_tx	bonding.h	/^static inline void unblock_netpoll_tx(void)$/;"	f
unblock_netpoll_tx	bonding.h	149;"	d
updelay	bond_main.c	/^static int updelay	= 0;$/;"	v	file:
updelay	bonding.h	/^	int updelay;$/;"	m	struct:bond_params
use_carrier	bond_main.c	/^static int use_carrier	= 1;$/;"	v	file:
use_carrier	bonding.h	/^	int use_carrier;$/;"	m	struct:bond_params
version	bond_main.c	/^static const char * const version =$/;"	v	file:
version_number	bond_3ad.h	/^	u8 version_number;	 \/\/  = 0x01$/;"	m	struct:bond_marker
version_number	bond_3ad.h	/^	u8 version_number;$/;"	m	struct:lacpdu
vlan_entry	bonding.h	/^struct vlan_entry {$/;"	s
vlan_id	bond_alb.h	/^	unsigned short vlan_id;	\/* VLAN tag associated with IP address *\/$/;"	m	struct:rlb_client_info
vlan_id	bonding.h	/^	unsigned short vlan_id;$/;"	m	struct:vlan_entry
vlan_ip	bonding.h	/^	__be32 vlan_ip;$/;"	m	struct:vlan_entry
vlan_ipv6	bonding.h	/^	struct in6_addr vlan_ipv6;$/;"	m	struct:vlan_entry	typeref:struct:vlan_entry::in6_addr
vlan_list	bonding.h	/^	struct   list_head vlan_list;$/;"	m	struct:bonding	typeref:struct:bonding::list_head
vlan_list	bonding.h	/^	struct list_head vlan_list;$/;"	m	struct:vlan_entry	typeref:struct:vlan_entry::list_head
vlgrp	bonding.h	/^	struct   vlan_group *vlgrp;$/;"	m	struct:bonding	typeref:struct:bonding::vlan_group
wq	bonding.h	/^	struct   workqueue_struct *wq;$/;"	m	struct:bonding	typeref:struct:bonding::workqueue_struct
xmit_hash_policy	bond_main.c	/^static char *xmit_hash_policy = NULL;$/;"	v	file:
xmit_hash_policy	bonding.h	/^	int      (*xmit_hash_policy)(struct sk_buff *, struct net_device *, int);$/;"	m	struct:bonding
xmit_hashtype	bond_main.c	/^static int xmit_hashtype= BOND_XMIT_POLICY_LAYER2;$/;"	v	file:
xmit_hashtype_tbl	bond_main.c	/^struct bond_parm_tbl xmit_hashtype_tbl[] = {$/;"	v	typeref:struct:bond_parm_tbl
xmit_policy	bonding.h	/^	int xmit_policy;$/;"	m	struct:bond_params
